---------------------------Collection Data-----------------------------------
object ที่ถูกระบุตำแหน่งทั้งหมด เป็น object ที่ไม่มีการตกขอบของ pixel ทั้งสิ้น
ตำแหน่งของ object ที่ labeled อยู่ในโฟลเดอร์ CSV
ขั้นตอนการเก็บ data จาก Mikulski Archive
1. เอา CSV (survet_M33) ไปเข้า STScl แล้วดูว่าตำแหน่งที่กระจุกกันอยู่ตรงไหน # สร้าง bounding box ผ่านไฟล์ data_surveying(M33)
2. จากนั้น เปิดอีก Tab นึงแล้วพิมพ์ว่า M33
keyword
science|HST|HAP|ACS/WFC|HAP|F814W|Optical|ANY / M33-B02-F02-WFC 

3. เลือก Legion จากพื้นที่ข้อ 1 แล้ว Save หลังจากนั้นแตกไฟล์
 - แตกไฟล์เพื่อเอาภาพ .fits มา process ต่อ
 - ตอน save file fits แยกโฟลเดอร์รูปเก่ากับใหม่ในการ process จะช่วยลดเวลา label รูป

--------------- แปลงภาพ FITS -> jpeg------------------------------------------
4. ใช้ fits_to_jpg.ipynb ในการแปลง *** (Flip ภาพให้ตรงกันภาพที่ใช้ใน ds9 ก่อน save 
โดยใช้คำสั่ง np.flip(data, axis=0))
--------------- ทำเฉลยสำหรับ Yolo----------------------------------------------
5. เปิด fits files ในโปรแกรม ds9
* 5.1 หมุนแกนภาพให้จุด x 0 y 0 อยู่ที่ มุมซ้ายบน โดยไปที่ Zoom -> Invert Y
  โดยหลังจากที่ได้ตำแหน่งจาก ds9 ที่จุดเริ่มต้นเป็น 0, 0
6. load region จาก ..\regions\global\box_regions.reg
7. save object ที่อยู่ในแต่ละภาพ


!!! ในขั้นตอน 5 6 7 ทำเพื่อให้ได้ตำแหน่งของ object ที่อยู่ในแต่ละภาพ        !!!
!!! ในขั้นตอนของการเลือก object จะเลือก object ที่สมบูรณ์, ภาพไม่ขาดเท่านั้น !!!


8. ใช้ ds9_labeling.ipynb ในการสร้างเฉลยจากไฟล์ที่ได้มาจาก ds9
9. แปลงตำแหน่งที่ได้จาก ds9_labeling.ipynb ให้เป็นตำแหน่งรูปแบบ Yolo โดยใช้ position_to_yolo.ipynb
10. ใช้ position_to_YOLO_format.ipynb ในการแปลงจาก pixel position ให้เป็นตำแหน่งเป็น % ของขนาดภาพตามรูปแบบ Yolo
11. Crop รูปภาพ ...
12. Run Model 



---------------------------Numeric Extraction-----------------------------------
ข้อมูลที่นำมา Extract ดั้งเดิม นั้นทำได้ยาก จึงไปนำข้อมูล
https://arxiv.org/pdf/0704.1576.pdf มาใช้แทน
1. นำข้อมูลเข้าไฟล์ extract_numeric.ipynb
--------------------------------------------------------------------------------



---------------------Image Extraction (cropping images)-------------------------
หลังจากที่ได้รูป jpg มาแล้ว ต่อไปจะนำรูป ไป crop ให้ขนาดเล็กลงก่อนที่จะนำไปเข้า YOLO
1. เปิด reduce_size_image.ipynb สำหรับการ crop รูปตามขนาดที่กำหนด
โดยผลลัพธ์ที่ได้จะเป็นภาพขนาดเล็กลงพร้อมกันเฉลยของรูปนั้น
ได้ออกมา 2 อย่าง คือ 
  1. โฟลเดอร์รูปภาพที่ถูกตัดออกมาด้วยขนาด x * x 
  2. เฉลยและตำแหน่งของรูปภาพที่เปลี่ยนใหม่ไปตามภาพเล็ก 
2. นำเฉลยที่ได้มาไปแปลงให้เป็น yolo format ด้วยการใช้ไฟล์ position_to_YOLO_format.ipynb
3. Done! (นำไป Run Model ต่อได้)
--------------------------------------------------------------------------------



---------------------------Augmentation-----------------------------------------
ใช้ไฟล์ augmentation.ipynb ในการทำ โดยจะต้องแปลงภาพใหญ่ให้กลายเป็นภาพเล็กก่อนใช้งาน

*** สามารถดูรูปย่อยที่ถูก detect ได้จาก post process ที่ไฟล์ post_process.ipynb